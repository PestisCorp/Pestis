name: Build on manual release

on:
  release:
    types: [created]

jobs:
    build:
      permissions:
        contents: write
        checks: write
        statuses: write
      name: Build release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      runs-on: self-hosted
      steps:

        # Checkout
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            lfs: true

        # Cache
        - uses: actions/cache@v3
          with:
            path: Pestis/Library
            key: Pestis/Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
            restore-keys: |
              Pestis/Library-

        # Test
        - name: Run tests
          uses: game-ci/unity-test-runner@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            githubToken: ${{ secrets.GITHUB_TOKEN }}
            projectPath: Pestis
            runAsHostUser: true
            chownFilesTo: ec2-user

        # Build
        - name: Build Linux
          uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: StandaloneLinux64
            versioning: Custom
            version: ${{github.event.release.tag_name }}
            projectPath: Pestis
            runAsHostUser: true
            chownFilesTo: ec2-user

        # Output
        - name: Zip Linux build to hosting folder
          run:  mkdir -p /home/ec2-user/actions-runner/builds/${{ github.event.release.tag_name  }}/ && zip -urD /home/ec2-user/actions-runner/builds/${{ github.event.release.tag_name }}/linux.zip build/StandaloneLinux64 

        # Build
        - name: Build Windows
          uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: StandaloneWindows64
            versioning: Custom
            version: ${{github.event.release.tag_name }}
            projectPath: Pestis
            runAsHostUser: true
            chownFilesTo: ec2-user


        # Output
        - name: Zip Windows build to hosting folder
          run: zip -urD /home/ec2-user/actions-runner/builds/${{ github.event.release.tag_name  }}/windows.zip build/StandaloneWindows64 
     

        - name: Symlink to latest
          run: ln -sfn /home/ec2-user/actions-runner/builds/${{ github.event.release.tag_name }} /home/ec2-user/actions-runner/builds/stable