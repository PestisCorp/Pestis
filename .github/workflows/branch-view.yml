on: 
    push:
        branches:
          - '**'
          - '!main'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
    build:
      permissions:
        contents: write
        checks: write
        statuses: write
      name: Build release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      runs-on: self-hosted
      steps:
        # Checkout
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            lfs: true

        # Cache
        - uses: actions/cache@v3
          with:
            path: Pestis/Library
            key: Pestis/Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
            restore-keys: |
              Pestis/Library-
              Library-Pestis
              Library-

        # Test
        - name: Run tests
          uses: game-ci/unity-test-runner@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            githubToken: ${{ secrets.GITHUB_TOKEN }}
            projectPath: Pestis
            runAsHostUser: true
            chownFilesTo: ec2-user


        # Build
        - name: Build Linux
          uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: StandaloneLinux64
            versioning: Custom
            version: ${{ github.ref_name }}
            projectPath: Pestis
            runAsHostUser: true
            chownFilesTo: ec2-user

        - name: Compress Linux Build
          uses: somaz94/compress-decompress@v1
          with:
            command: compress
            source: build/StandaloneLinux64
            dest: linux.zip
            includeRoot: false
            format: zip
  

        # Output
        - name: Copy Linux build to hosting folder
          run: cp -rfT linux.zip /home/ec2-user/actions-runner/builds/${{ github.ref_name  }}/linux.zip

        # Build
        - name: Build Windows
          uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: StandaloneWindows64
            versioning: Custom
            version: ${{ github.ref_name }}
            projectPath: Pestis
            runAsHostUser: true
            chownFilesTo: ec2-user
    
        - name: Compress Windows Build
          uses: somaz94/compress-decompress@v1
          with:
            command: compress
            source: build/StandaloneWindows64
            dest: windows.zip
            includeRoot: false
            format: zip

        # Output
        - name: Copy Windows build to hosting folder
          run: cp -rfT windows.zip /home/ec2-user/actions-runner/builds/${{ github.ref_name  }}/windows.zip
     
